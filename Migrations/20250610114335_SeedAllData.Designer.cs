// <auto-generated />
using System;
using Bimbrownik_API.data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bimbrownik_API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250610114335_SeedAllData")]
    partial class SeedAllData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bimbrownik_API.Models.Entities.AlcoholCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlcoholCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1111111-1111-1111-1111-111111111111"),
                            Name = "Beer"
                        },
                        new
                        {
                            Id = new Guid("b2222222-2222-2222-2222-222222222222"),
                            Name = "Wine"
                        },
                        new
                        {
                            Id = new Guid("c3333333-3333-3333-3333-333333333333"),
                            Name = "Whisky"
                        },
                        new
                        {
                            Id = new Guid("d4444444-4444-4444-4444-444444444444"),
                            Name = "Vodka"
                        });
                });

            modelBuilder.Entity("Bimbrownik_API.Models.Entities.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AuthorUserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07777777-7777-7777-7777-777777777777"),
                            AuthorId = "f4d4g733-4h5e-9i0d-1e99-dddddddddddd",
                            Name = "Świetny wpis, dzięki!",
                            PostId = new Guid("e5555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("08888888-8888-8888-8888-888888888888"),
                            AuthorId = "f4d4g733-4h5e-9i0d-1e99-dddddddddddd",
                            Name = "Ciekawy temat, chętnie spróbuję.",
                            PostId = new Guid("e5555555-5555-5555-5555-555555555555")
                        },
                        new
                        {
                            Id = new Guid("09999999-9999-9999-9999-999999999999"),
                            AuthorId = "f4d4g733-4h5e-9i0d-1e99-dddddddddddd",
                            Name = "Super rekomendacje.",
                            PostId = new Guid("f6666666-6666-6666-6666-666666666666")
                        });
                });

            modelBuilder.Entity("Bimbrownik_API.Models.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlcoholCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AuthorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlcoholCategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5555555-5555-5555-5555-555555555555"),
                            AlcoholCategoryId = new Guid("a1111111-1111-1111-1111-111111111111"),
                            AuthorId = "f4d4g733-4h5e-9i0d-1e99-dddddddddddd",
                            Description = "Krótki przegląd piw z lokalnych browarów.",
                            Name = "Top 5 Craft Beers",
                            Title = "Moje ulubione piwa rzemieślnicze"
                        },
                        new
                        {
                            Id = new Guid("f6666666-6666-6666-6666-666666666666"),
                            AlcoholCategoryId = new Guid("b2222222-2222-2222-2222-222222222222"),
                            AuthorId = "e3c3f622-3f4d-7h8c-0d88-cccccccccccc",
                            Description = "Kilka propozycji win na urodziny i rocznice.",
                            Name = "Wina na specjalne okazje",
                            Title = "Polecane wina"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityUser");
                });

            modelBuilder.Entity("Bimbrownik_API.Models.Entities.Comment", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "AuthorUser")
                        .WithMany()
                        .HasForeignKey("AuthorUserId");

                    b.Navigation("AuthorUser");
                });

            modelBuilder.Entity("Bimbrownik_API.Models.Entities.Post", b =>
                {
                    b.HasOne("Bimbrownik_API.Models.Entities.AlcoholCategory", "AlcoholCategory")
                        .WithMany()
                        .HasForeignKey("AlcoholCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AlcoholCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
